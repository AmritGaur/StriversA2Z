https://practice.geeksforgeeks.org/problems/topological-sort/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=topological-sort
class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // code here
	    vector<int>ans;
	    vector<int>indegree(V,0);
	   for(int i=0;i<V;i++){
	        for(auto j=adj[i].begin();j!=adj[i].end();j++){
	            indegree[*j]+=1;
	        }
	    }
	    queue<int>q;
	    for(int i=0;i<V;i++){
	        if(indegree[i]==0){
	           q.push({i}); 
	        }
	    }
	    while(q.empty()==false){
	        int x = q.front();
	        ans.push_back(x);
	        q.pop();
	        for(int u:adj[x]){
	            indegree[u]--;
	            if(indegree[u]==0){
	               q.push(u); 
	           }
	        }
	    }
	    return ans;
	}
};
