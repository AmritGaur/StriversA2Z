https://practice.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=detect-cycle-in-an-undirected-graph

class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    bool cycle(int V, vector<int> adj[], vector<bool>& vis,int s)
    {
        queue<pair<int,int>>q;
        q.push({-1,s});
        vis[s]=true;
        while(q.empty()==false){
            int par=q.front().first;
            int curr=q.front().second;
            q.pop();
            for(int u: adj[curr]){
                if(!vis[u]){
                    vis[u]=true;
                    q.push({curr,u});
                }
       // IF NEIGHBOUR IS ALREADY VISITED AND IT IS NOT PARENT, IT MEANS CYCLE IS PRESENT
                else if(vis[u] && u!=par){
                    return 1;
                }
            }
        }
        return 0;
    }
    bool isCycle(int V, vector<int> adj[]) {
        // Code here
        vector<bool> vis(V,false);
        for(int i=0;i<V;i++){
                vis[i]=false;
        }
        for(int i=0;i<V;i++){
            if(!vis[i]){
                if(cycle(V,adj,vis,i)){
                    return 1;
                }
            }
        }
        return 0;
    }
};
