https://leetcode.com/problems/course-schedule-ii/
class Solution
{
  public:
    vector<int> findOrder(int n,vector<vector<int>> &prerequisites) 
    {
        vector<int>adj[n];
        vector<int>ans;
	    vector<int>indegree(n,0);
	    for(int i=0;i<prerequisites.size();i++){
	        for(int j=0;j<prerequisites[i].size();j++){
	            adj[prerequisites[i][1]].push_back(prerequisites[i][0]);
	        }
	    }
	    for(int i=0;i<n;i++){
	        for(auto j=adj[i].begin();j!=adj[i].end();j++){
	            indegree[*j]+=1;
	        }
	    }
	    queue<int>q;
	    for(int i=0;i<n;i++){
	        if(indegree[i]==0){
	           q.push({i}); 
	        }
	    }
	    while(q.empty()==false){
	        int x = q.front();
	        ans.push_back(x);
	        q.pop();
	        for(int u:adj[x]){
	            indegree[u]--;
	            if(indegree[u]==0){
	               q.push(u); 
	           }
	        }
	    }
	    if(ans.size()!=n){
	        return vector<int>();
	    }
	    return ans;
	}
};
